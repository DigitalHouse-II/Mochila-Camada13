a. ¿Quién inventó el sistema de control de versión Git y por qué?

Git es un proyecto de código abierto maduro y con un mantenimiento activo que desarrolló originalmente Linus Torvalds, el famoso creador del kernel del sistema operativo Linux, en 2005.
Git, que presenta una arquitectura distribuida, es un ejemplo de DVCS (sistema de control de versiones distribuido, por sus siglas en inglés). En lugar de tener un único espacio para todo el historial de versiones del software, como sucede de manera habitual en los sistemas de control de versiones antaño populares, como CVS o Subversion (también conocido como SVN), en Git, la copia de trabajo del código de cada desarrollador es también un repositorio que puede albergar el historial completo de todos los cambios.

Además de contar con una arquitectura distribuida, Git se ha diseñado teniendo en cuenta el rendimiento, la seguridad y la flexibilidad.

Fuente: https://www.atlassian.com/es/git/tutorials/what-is-git#:~:text=Git%20es%20un%20proyecto%20de,sistema%20operativo%20Linux%2C%20en%202005.

b. ¿A quién pertenece actualmente Github y por qué?

Github actualmente pertenece a Microsoft (desde el 2018)

Fuente: https://es.wikipedia.org/wiki/GitHub#:~:text=GitHub%2C%20Inc.,-Tipo&text=Npm%2C%20Inc.&text=GitHub%20Inc.&text=El%204%20de%20junio%20de,de%207500%20millones%20de%20d%C3%B3lares.

¿Por qué Microsoft?
Desde el nombramiento de Satya Nadella como CEO de Microsoft (sustituyendo al infame Steve Ballmer), la compañía ha adoptado una estrategia nueva, mucho más abierta al mundo del software libre y a la integración con otras plataformas y servicios. Un ejemplo es la adquisición en 2016 de Xamarin, una plataforma que permite crear aplicaciones móviles que pueden funcionar en distintos sistemas, como iOS, Android y (por supuesto) Windows. Y es, precisamente, el que fuera CEO de Xamarin, Nat Friedman, quien será nuevo CEO de GitHub. Así pues, esta adquisición es, sin duda, un acercamiento a la comunidad más vibrante en el desarrollo de software libre y abierto.

Además, hay otro motivo de peso: Microsoft Azure. En plena explosión de cloud services (servicios en la nube), con un crecimiento previsto para este año del 21.4%, Microsoft tiene que competir con el líder indiscutible a día de hoy, la todopoderosa Amazon con AWS. Qué mejor forma de hacerlo que estar en contacto directo con los desarrolladores que trabajan en esos servicios, ver sus necesidades y ofrecerles herramientas que faciliten su integración con Azure.

fuente: https://naukas.com/2018/06/06/microsoft-compra-github/

c. ¿Hay otra forma que no sea la terminal para trabajar con Github?

Si! 

"6. Herramientas gráficas
Dentro del propio Git podemos encontrar:

gitk – Para explorar el repositorio, ver los cambios, …
git gui – Para hacer las tareas habituales (commits, branches, …) con una interfaz gráfica.
Si esto se nos queda corto, tenemos a nuestra disposición un plugin de Eclipse: EGit (http://www.eclipse.org/egit/).

Y si esto tampoco nos vale, en
https://git.wiki.kernel.org/index.php/InterfacesFrontendsAndTools podemos encontrar multitud de herramientas."

Fuente: https://www.adictosaltrabajo.com/2010/07/12/git/